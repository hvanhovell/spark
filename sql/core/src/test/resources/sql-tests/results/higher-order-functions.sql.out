-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 12


-- !query 0
create or replace temporary view nested as values
  (1, array(32, 97), array(array(12, 99), array(123, 42), array(1))),
  (2, array(77, -76), array(array(6, 96, 65), array(-1, -2))),
  (3, array(12), array(array(17)))
  as t(x, ys, zs)
-- !query 0 schema
struct<>
-- !query 0 output



-- !query 1
select upper(x -> x) as v
-- !query 1 schema
struct<>
-- !query 1 output
org.apache.spark.sql.AnalysisException
A lambda function should only be used in a higher order function. However, its class is org.apache.spark.sql.catalyst.expressions.Upper, which is not a higher order function.; line 1 pos 7


-- !query 2
select transform(zs, z -> z) as v from nested
-- !query 2 schema
struct<v:array<array<int>>>
-- !query 2 output
[[12,99],[123,42],[1]]
[[17]]
[[6,96,65],[-1,-2]]


-- !query 3
select transform(ys, y -> y * y) as v from nested
-- !query 3 schema
struct<v:array<int>>
-- !query 3 output
[1024,9409]
[144]
[5929,5776]


-- !query 4
select exists(ys, y -> y > 30) as v from nested
-- !query 4 schema
struct<v:boolean>
-- !query 4 output
false
true
true


-- !query 5
select filter(ys, y -> y > 30) as v from nested
-- !query 5 schema
struct<v:array<int>>
-- !query 5 output
[32,97]
[77]
[]


-- !query 6
select reduce(ys, 0, (y, a) -> y + a + x) as v from nested
-- !query 6 schema
struct<v:int>
-- !query 6 output
131
15
5


-- !query 7
select reduce(ys, 0, (y, Y) -> y) as v from nested
-- !query 7 schema
struct<>
-- !query 7 output
org.apache.spark.sql.AnalysisException
Lambda function arguments should not have names that are semantically the same: 'y' @ 0 and 'Y' @ 1; line 1 pos 21


-- !query 8
select reduce(ys, 0, y -> y) as v from nested
-- !query 8 schema
struct<>
-- !query 8 output
org.apache.spark.sql.AnalysisException
The number of lambda function arguments '1' does not match the number of arguments expected by the higher order function '2'.; line 1 pos 21


-- !query 9
select reduce(ys, 0, (a, b, c) -> a + b + c) as v from nested
-- !query 9 schema
struct<>
-- !query 9 output
org.apache.spark.sql.AnalysisException
The number of lambda function arguments '3' does not match the number of arguments expected by the higher order function '2'.; line 1 pos 21


-- !query 10
select transform(zs, z -> filter(z, zz -> zz > 50)) as v from nested
-- !query 10 schema
struct<v:array<array<int>>>
-- !query 10 output
[[96,65],[]]
[[99],[123],[]]
[[]]


-- !query 11
select transform(zs, z -> reduce(z, 1, (acc, val) -> acc * val * size(z))) as v from nested
-- !query 11 schema
struct<v:array<int>>
-- !query 11 output
[1010880,8]
[17]
[4752,20664,1]
