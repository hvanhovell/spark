-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 10


-- !query 0
select upper(x -> x) as v
-- !query 0 schema
struct<>
-- !query 0 output
org.apache.spark.sql.AnalysisException
A lambda function should only be used in a higher order function. However, its class is org.apache.spark.sql.catalyst.expressions.Upper, which is not a higher order function.; line 1 pos 7


-- !query 1
select transform(array(1,2,3,4,5), x -> x) as v
-- !query 1 schema
struct<v:array<int>>
-- !query 1 output
[1,2,3,4,5]


-- !query 2
select transform(array(1,2,3,4,5), x -> x * x) as v
-- !query 2 schema
struct<v:array<int>>
-- !query 2 output
[1,4,9,16,25]


-- !query 3
select exists(array(1,2,3,4,5), x -> x = 2) as v
-- !query 3 schema
struct<v:boolean>
-- !query 3 output
true


-- !query 4
select filter(array(1,2,3,4,5), x -> x > 2) as v
-- !query 4 schema
struct<v:array<int>>
-- !query 4 output
[3,4,5]


-- !query 5
select reduce(array(1,2,3,4,5), 0, (x, a) -> x + a) as v
-- !query 5 schema
struct<v:int>
-- !query 5 output
15


-- !query 6
select reduce(array(1,2,3,4,5), 0, (x, X) -> x) as v
-- !query 6 schema
struct<>
-- !query 6 output
org.apache.spark.sql.AnalysisException
Lambda function arguments should not have names that are semantically the same: 'x' @ 0 and 'X' @ 1; line 1 pos 7


-- !query 7
select reduce(array(1,2,3,4,5), 0, x -> x) as v
-- !query 7 schema
struct<>
-- !query 7 output
org.apache.spark.sql.AnalysisException
The number of lambda function arguments '1' does not match the number of arguments expected by the higher order function '2'.; line 1 pos 7


-- !query 8
select transform(array(array(1,2), array(2,3)), x -> filter(x, y -> y > 2)) as v
-- !query 8 schema
struct<v:array<array<int>>>
-- !query 8 output
[[],[3]]


-- !query 9
select transform(array(array(1,2), array(2,3)), x -> reduce(x, 1, (y, z) -> y * z)) as v
-- !query 9 schema
struct<v:array<int>>
-- !query 9 output
[2,6]
